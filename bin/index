#!/usr/bin/env ruby
# frozen_string_literal: true

require_relative '../lib/savant/indexer'

cmd = ARGV[0]
settings_path = ENV['SETTINGS_PATH'] || 'config/settings.json'

if cmd.nil?
  warn "usage: index all | index <repo>"
  exit 2
end

repo = (cmd == 'all') ? nil : cmd

begin
  started = Time.now
  mode = repo ? "repo=#{repo}" : "all"
  puts "INDEX START ts=#{started.utc.iso8601} settings=#{settings_path} mode=#{mode}"
  idx = Savant::Indexer.new(settings_path)
  res = idx.run(repo)
  finished = Time.now
  dur = (finished - started).round(3)
  puts "INDEX DONE ts=#{finished.utc.iso8601} duration_s=#{dur} total=#{res[:total]} changed=#{res[:changed]} skipped=#{res[:skipped]}"
  exit 0
rescue Savant::ConfigError => e
  warn "CONFIG ERROR: #{e.message}"
  exit 1
rescue => e
  warn "INDEX ERROR: #{e.class}: #{e.message}"
  exit 1
end
